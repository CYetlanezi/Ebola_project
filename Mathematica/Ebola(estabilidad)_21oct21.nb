(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     37501,        979]
NotebookOptionsPosition[     36472,        953]
NotebookOutlinePosition[     36875,        969]
CellTagsIndexPosition[     36832,        966]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.843846516788522*^9, 
  3.8438465261048765`*^9}},ExpressionUUID->"061aef4a-8f72-490d-a4f0-\
770e9af8668b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jac", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "-", "m", "-", 
       RowBox[{"b", "*", "v"}]}], ",", "0", ",", 
      RowBox[{
       RowBox[{"-", "b"}], "*", "x"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "*", "v"}], ",", 
      RowBox[{
       RowBox[{"-", "u"}], "-", "c"}], ",", 
      RowBox[{"b", "*", "x"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], "*", "v"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "*", "v"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"a", "+", "v"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "*", "y", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"v", "-", "1"}], ")"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", "v"}], ")"}], "^", "2"}]}]}], ")"}], "-", "d", 
       "-", 
       RowBox[{"b", "*", "x"}]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.843846568510252*^9, 
  3.8438465685910735`*^9}},ExpressionUUID->"f4cdbb4b-96ce-49ed-8279-\
dd7ab526aea3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], "+", "r", "-", 
      RowBox[{"b", " ", "v"}]}], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "x"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", " ", "v"}], ",", 
     RowBox[{
      RowBox[{"-", "c"}], "-", "u"}], ",", 
     RowBox[{"b", " ", "x"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b"}], " ", "v"}], ",", 
     FractionBox[
      RowBox[{"k", " ", "v"}], 
      RowBox[{"a", "+", "v"}]], ",", 
     RowBox[{
      RowBox[{"-", "d"}], "-", 
      RowBox[{"b", " ", "x"}], "+", 
      FractionBox[
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "v"}], ")"}], " ", "y"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"a", "+", "v"}], ")"}], "2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.843846570478219*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f9291cdf-5d16-49f1-a9dd-a5696fe5c7d3"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"respuesta", " ", "=", " ", 
  RowBox[{"Solve", " ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"pi", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"lambdas", " ", "+", " ", "lambdaa", " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "omega"}], ")"}], "*", "v"}], " ", "+", " ", 
           "mu", " ", "+", " ", "q"}], ")"}], "*", "S"}], " ", "+", " ", 
        RowBox[{"xi", "*", "R"}], "+", 
        RowBox[{"Omega", "*", "Q"}]}], "==", "0"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "*", "S"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"mu", " ", "+", " ", "gamma", " ", "+", " ", "Omega"}], 
          ")"}], "*", "Q"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"lambdas", "*", "S"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "omega"}], ")"}], "*", "deltai"}], " ", "+", 
           " ", "gammitai", " ", "+", " ", "sigmai", " ", "+", " ", "mu"}], 
          ")"}], "*", "i"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "psi"}], ")"}], "*", "R"}], " ", "+", " ", 
        RowBox[{"gamma", "*", "Q"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "omega"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"deltai", "*", "i"}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"gammitan", " ", "+", " ", "sigman", " ", "+", " ", "mu"}], 
          ")"}], "*", "H"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "omega"}], ")"}], "*", " ", "v", "*", "S"}], " ", 
        "+", " ", 
        RowBox[{"gammitai", "*", "I"}], " ", "+", " ", 
        RowBox[{"gammitan", "*", "H"}], " ", "-", " ", 
        RowBox[{"mu", "*", "R"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "psi"}], ")"}], "*", "R"}], " ", "+", 
        RowBox[{"lambdaa", "*", "S"}], "-", 
        RowBox[{"xi", "*", "R"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"sigmai", "*", "i"}], "+", 
        RowBox[{"sigman", "*", "H"}], "-", 
        RowBox[{"rho", "*", "d"}]}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "S", ",", " ", "Q", ",", " ", "i", ",", " ", "H", ",", " ", "R", ",", 
      " ", "d"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.843846584126092*^9, 3.8438465904646072`*^9}, {
  3.8438486520693855`*^9, 3.8438486555755215`*^9}, {3.8438486961052923`*^9, 
  3.8438488551239223`*^9}, {3.843848887406492*^9, 3.843848921182784*^9}, {
  3.8438489659635515`*^9, 3.843849201412141*^9}, {3.843849280328474*^9, 
  3.8438492807742825`*^9}, {3.8438493272100663`*^9, 3.8438493407589197`*^9}, {
  3.843849484860648*^9, 3.8438494881433372`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e87dab91-6bdb-413f-833b-73904bf208b5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"S", "\[Rule]", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "gamma"}], "-", "mu", "-", "Omega"}], ")"}], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "pi"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "deltai"}], " ", "gammitan", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "psi"}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitai"}], "-", "mu", "-", 
                    RowBox[{"deltai", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}]}], "-", "sigmai"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitan"}], "-", "mu", "-", "sigman"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "mu", "+", "psi", "-", "xi"}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "gammitai", " ", 
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitan"}], "-", "mu", "-", "sigman"}], 
                    ")"}], " ", "xi"}]}], ")"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Omega"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "deltai"}], " ", "gammitan", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "psi"}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitai"}], "-", "mu", "-", 
                    RowBox[{"deltai", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}]}], "-", "sigmai"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitan"}], "-", "mu", "-", "sigman"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "mu", "+", "psi", "-", "xi"}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"deltai", " ", "gamma", " ", "gammitan", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}], " ", "xi"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gamma"}], "-", "mu", "-", "Omega"}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], ")"}]}]}], ")"}]}], 
               ")"}]}]}], ",", 
            RowBox[{"Q", "\[Rule]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"]}], ",", 
            TemplateBox[{"2"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"R", "\[Rule]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"]}], ",", 
            RowBox[{"d", "\[Rule]", 
             RowBox[{"-", 
              FractionBox[
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], 
               RowBox[{"rho", " ", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"]}]]}]}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{53., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{64., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 25857177969580906250, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{53., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 25857177969580906250, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{102.5, {2., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 25857177969580906250, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{125.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[25857177969580906250 === $SessionID, 
   Out[10], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.8438488461760254`*^9, 3.843848863458023*^9}, 
   3.8438489056449604`*^9, {3.8438491819593115`*^9, 3.8438492022485323`*^9}, {
   3.843849348854684*^9, 3.843849349907669*^9}, 3.8438494899148345`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"a52de352-e584-47e3-bf49-42615ee87932"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simplify", "[", "respuesta", "]"}]], "Input",
 CellChangeTimes->{{3.8438494926794024`*^9, 3.843849498892931*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"dcef6fd8-974b-4438-a395-24e6fe898f4d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"simplify", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"S", "\[Rule]", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gamma"}], "-", "mu", "-", "Omega"}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "pi"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "deltai"}], " ", "gammitan", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "psi"}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitai"}], "-", "mu", "-", 
                    RowBox[{"deltai", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}]}], "-", "sigmai"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitan"}], "-", "mu", "-", "sigman"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "mu", "+", "psi", "-", "xi"}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "gammitai", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitai"}], "-", "mu", "-", 
                    RowBox[{"deltai", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}]}], "-", "sigmai"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitan"}], "-", "mu", "-", "sigman"}], 
                    ")"}], " ", "xi"}]}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Omega"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "deltai"}], " ", "gammitan", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "psi"}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitai"}], "-", "mu", "-", 
                    RowBox[{"deltai", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}]}], "-", "sigmai"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitan"}], "-", "mu", "-", "sigman"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "mu", "+", "psi", "-", "xi"}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"deltai", " ", "gamma", " ", "gammitan", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}], " ", "xi"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gamma"}], "-", "mu", "-", "Omega"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "lambdaa"}], "-", "lambdas", "-", "mu", "-", 
                    "q", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}], " ", "v"}]}], ")"}]}],
                     " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "deltai"}], " ", "gammitan", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "psi"}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitai"}], "-", "mu", "-", 
                    RowBox[{"deltai", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}]}], "-", "sigmai"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "gammitan"}], "-", "mu", "-", "sigman"}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "mu", "+", "psi", "-", "xi"}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "deltai"}], " ", "gammitan", " ", "lambdas", 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "omega"}], ")"}]}], "-", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}], ")"}], " ", "xi"}]}], 
                    ")"}]}]}], ")"}]}], ")"}]}]}], ",", 
             RowBox[{"Q", "\[Rule]", 
              FractionBox[
               RowBox[{"q", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"gammitai", " ", "gammitan", " ", "pi"}], "+", 
                  TemplateBox[{"91"},
                   "OutputSizeLimit`Skeleton"], "+", 
                  RowBox[{"pi", " ", "sigmai", " ", "sigman", " ", "xi"}]}], 
                 ")"}]}], 
               RowBox[{
                RowBox[{
                "gamma", " ", "gammitai", " ", "gammitan", " ", "lambdaa"}], 
                "+", 
                TemplateBox[{"1090"},
                 "OutputSizeLimit`Skeleton"], "+", 
                RowBox[{
                "mu", " ", "q", " ", "sigmai", " ", "sigman", " ", 
                 "xi"}]}]]}], ",", 
             RowBox[{"i", "\[Rule]", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], ",", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"R", "\[Rule]", 
              RowBox[{"-", 
               FractionBox[
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"]]}]}], ",", 
             RowBox[{"d", "\[Rule]", 
              RowBox[{"-", 
               FractionBox[
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], 
                RowBox[{"rho", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "gamma", " ", "gammitai", " ", "gammitan", " ", 
                    "lambdaa"}], "+", 
                   RowBox[{
                   "gamma", " ", "gammitai", " ", "gammitan", " ", 
                    "lambdas"}], "+", 
                   TemplateBox[{"1089"},
                    "OutputSizeLimit`Skeleton"], "+", 
                   RowBox[{
                   "mu", " ", "q", " ", "sigmai", " ", "sigman", " ", 
                    "xi"}]}], ")"}]}]]}]}]}], "}"}], "}"}], "]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{53., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{64., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 25857177969580906250, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{53., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{53., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 25857177969580906250, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{102.5, {2., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 25857177969580906250, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{125.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[25857177969580906250 === $SessionID, 
   Out[11], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.843849499349843*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c4e2a79a-83d6-4885-9d3b-a448bbec8445"]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
FrontEndVersion->"12.1 para Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5ab2ea71-e0c5-419e-8dad-6999f93dbc5a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 154, 3, 28, "Input",ExpressionUUID->"061aef4a-8f72-490d-a4f0-770e9af8668b"],
Cell[CellGroupData[{
Cell[737, 27, 1158, 38, 28, "Input",ExpressionUUID->"f4cdbb4b-96ce-49ed-8279-dd7ab526aea3"],
Cell[1898, 67, 1060, 35, 51, "Output",ExpressionUUID->"f9291cdf-5d16-49f1-a9dd-a5696fe5c7d3"]
}, Closed]],
Cell[CellGroupData[{
Cell[2995, 107, 3161, 79, 155, "Input",ExpressionUUID->"e87dab91-6bdb-413f-833b-73904bf208b5"],
Cell[6159, 188, 13332, 336, 200, "Output",ExpressionUUID->"a52de352-e584-47e3-bf49-42615ee87932"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19528, 529, 216, 3, 28, "Input",ExpressionUUID->"dcef6fd8-974b-4438-a395-24e6fe898f4d"],
Cell[19747, 534, 16709, 416, 420, "Output",ExpressionUUID->"c4e2a79a-83d6-4885-9d3b-a448bbec8445"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

